//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("LocalDataModel", "Applications_MenuOptions", "Application", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Disney.iDash.LocalData.eApplication), "MenuOption", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Disney.iDash.LocalData.eMenuOption), true)]
[assembly: EdmRelationshipAttribute("LocalDataModel", "UserApplications", "Application", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Disney.iDash.LocalData.eApplication), "User", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Disney.iDash.LocalData.eUser))]
[assembly: EdmRelationshipAttribute("LocalDataModel", "UserEnvironments", "Environment", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Disney.iDash.LocalData.eEnvironment), "User", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Disney.iDash.LocalData.eUser))]
[assembly: EdmRelationshipAttribute("LocalDataModel", "UserMenuOptions", "MenuOption", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Disney.iDash.LocalData.eMenuOption), "User", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Disney.iDash.LocalData.eUser))]

#endregion

namespace Disney.iDash.LocalData
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class LocalDataEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new LocalDataEntities object using the connection string found in the 'LocalDataEntities' section of the application configuration file.
        /// </summary>
        public LocalDataEntities() : base("name=LocalDataEntities", "LocalDataEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new LocalDataEntities object.
        /// </summary>
        public LocalDataEntities(string connectionString) : base(connectionString, "LocalDataEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new LocalDataEntities object.
        /// </summary>
        public LocalDataEntities(EntityConnection connection) : base(connection, "LocalDataEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<eApplication> eApplications
        {
            get
            {
                if ((_eApplications == null))
                {
                    _eApplications = base.CreateObjectSet<eApplication>("eApplications");
                }
                return _eApplications;
            }
        }
        private ObjectSet<eApplication> _eApplications;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<eEnvironment> eEnvironments
        {
            get
            {
                if ((_eEnvironments == null))
                {
                    _eEnvironments = base.CreateObjectSet<eEnvironment>("eEnvironments");
                }
                return _eEnvironments;
            }
        }
        private ObjectSet<eEnvironment> _eEnvironments;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<eMenuOption> eMenuOptions
        {
            get
            {
                if ((_eMenuOptions == null))
                {
                    _eMenuOptions = base.CreateObjectSet<eMenuOption>("eMenuOptions");
                }
                return _eMenuOptions;
            }
        }
        private ObjectSet<eMenuOption> _eMenuOptions;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<eUser> eUsers
        {
            get
            {
                if ((_eUsers == null))
                {
                    _eUsers = base.CreateObjectSet<eUser>("eUsers");
                }
                return _eUsers;
            }
        }
        private ObjectSet<eUser> _eUsers;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Setting> Settings
        {
            get
            {
                if ((_Settings == null))
                {
                    _Settings = base.CreateObjectSet<Setting>("Settings");
                }
                return _Settings;
            }
        }
        private ObjectSet<Setting> _Settings;

        #endregion
        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the eApplications EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToeApplications(eApplication eApplication)
        {
            base.AddObject("eApplications", eApplication);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the eEnvironments EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToeEnvironments(eEnvironment eEnvironment)
        {
            base.AddObject("eEnvironments", eEnvironment);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the eMenuOptions EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToeMenuOptions(eMenuOption eMenuOption)
        {
            base.AddObject("eMenuOptions", eMenuOption);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the eUsers EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToeUsers(eUser eUser)
        {
            base.AddObject("eUsers", eUser);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Settings EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSettings(Setting setting)
        {
            base.AddObject("Settings", setting);
        }

        #endregion
    }
    

    #endregion
    
    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LocalDataModel", Name="eApplication")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class eApplication : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new eApplication object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="applicationName">Initial value of the ApplicationName property.</param>
        public static eApplication CreateeApplication(global::System.Int32 id, global::System.String applicationName)
        {
            eApplication eApplication = new eApplication();
            eApplication.Id = id;
            eApplication.ApplicationName = applicationName;
            return eApplication;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ApplicationName
        {
            get
            {
                return _ApplicationName;
            }
            set
            {
                OnApplicationNameChanging(value);
                ReportPropertyChanging("ApplicationName");
                _ApplicationName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ApplicationName");
                OnApplicationNameChanged();
            }
        }
        private global::System.String _ApplicationName;
        partial void OnApplicationNameChanging(global::System.String value);
        partial void OnApplicationNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> Active
        {
            get
            {
                return _Active;
            }
            set
            {
                OnActiveChanging(value);
                ReportPropertyChanging("Active");
                _Active = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Active");
                OnActiveChanged();
            }
        }
        private Nullable<global::System.Boolean> _Active = true;
        partial void OnActiveChanging(Nullable<global::System.Boolean> value);
        partial void OnActiveChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LocalDataModel", "Applications_MenuOptions", "MenuOption")]
        public EntityCollection<eMenuOption> vMenuOptions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<eMenuOption>("LocalDataModel.Applications_MenuOptions", "MenuOption");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<eMenuOption>("LocalDataModel.Applications_MenuOptions", "MenuOption", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LocalDataModel", "UserApplications", "User")]
        public EntityCollection<eUser> vUsers
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<eUser>("LocalDataModel.UserApplications", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<eUser>("LocalDataModel.UserApplications", "User", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LocalDataModel", Name="eEnvironment")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class eEnvironment : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new eEnvironment object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="database">Initial value of the Database property.</param>
        public static eEnvironment CreateeEnvironment(global::System.Int32 id, global::System.String database)
        {
            eEnvironment eEnvironment = new eEnvironment();
            eEnvironment.Id = id;
            eEnvironment.Database = database;
            return eEnvironment;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String EnvironmentName
        {
            get
            {
                return _EnvironmentName;
            }
            set
            {
                OnEnvironmentNameChanging(value);
                ReportPropertyChanging("EnvironmentName");
                _EnvironmentName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("EnvironmentName");
                OnEnvironmentNameChanged();
            }
        }
        private global::System.String _EnvironmentName;
        partial void OnEnvironmentNameChanging(global::System.String value);
        partial void OnEnvironmentNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Hostname
        {
            get
            {
                return _Hostname;
            }
            set
            {
                OnHostnameChanging(value);
                ReportPropertyChanging("Hostname");
                _Hostname = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Hostname");
                OnHostnameChanged();
            }
        }
        private global::System.String _Hostname;
        partial void OnHostnameChanging(global::System.String value);
        partial void OnHostnameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Domain
        {
            get
            {
                return _Domain;
            }
            set
            {
                OnDomainChanging(value);
                ReportPropertyChanging("Domain");
                _Domain = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Domain");
                OnDomainChanged();
            }
        }
        private global::System.String _Domain;
        partial void OnDomainChanging(global::System.String value);
        partial void OnDomainChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Database
        {
            get
            {
                return _Database;
            }
            set
            {
                OnDatabaseChanging(value);
                ReportPropertyChanging("Database");
                _Database = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Database");
                OnDatabaseChanged();
            }
        }
        private global::System.String _Database;
        partial void OnDatabaseChanging(global::System.String value);
        partial void OnDatabaseChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Type
        {
            get
            {
                return _Type;
            }
            set
            {
                OnTypeChanging(value);
                ReportPropertyChanging("Type");
                _Type = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Type");
                OnTypeChanged();
            }
        }
        private global::System.String _Type;
        partial void OnTypeChanging(global::System.String value);
        partial void OnTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> Active
        {
            get
            {
                return _Active;
            }
            set
            {
                OnActiveChanging(value);
                ReportPropertyChanging("Active");
                _Active = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Active");
                OnActiveChanged();
            }
        }
        private Nullable<global::System.Boolean> _Active;
        partial void OnActiveChanging(Nullable<global::System.Boolean> value);
        partial void OnActiveChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String LibraryList
        {
            get
            {
                return _LibraryList;
            }
            set
            {
                OnLibraryListChanging(value);
                ReportPropertyChanging("LibraryList");
                _LibraryList = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("LibraryList");
                OnLibraryListChanged();
            }
        }
        private global::System.String _LibraryList;
        partial void OnLibraryListChanging(global::System.String value);
        partial void OnLibraryListChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LocalDataModel", "UserEnvironments", "User")]
        public EntityCollection<eUser> eUsers
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<eUser>("LocalDataModel.UserEnvironments", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<eUser>("LocalDataModel.UserEnvironments", "User", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LocalDataModel", Name="eMenuOption")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class eMenuOption : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new eMenuOption object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="applicationId">Initial value of the ApplicationId property.</param>
        /// <param name="tab">Initial value of the Tab property.</param>
        /// <param name="menuOption">Initial value of the MenuOption property.</param>
        public static eMenuOption CreateeMenuOption(global::System.Int32 id, global::System.Int32 applicationId, global::System.String tab, global::System.String menuOption)
        {
            eMenuOption eMenuOption = new eMenuOption();
            eMenuOption.Id = id;
            eMenuOption.ApplicationId = applicationId;
            eMenuOption.Tab = tab;
            eMenuOption.MenuOption = menuOption;
            return eMenuOption;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ApplicationId
        {
            get
            {
                return _ApplicationId;
            }
            set
            {
                OnApplicationIdChanging(value);
                ReportPropertyChanging("ApplicationId");
                _ApplicationId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ApplicationId");
                OnApplicationIdChanged();
            }
        }
        private global::System.Int32 _ApplicationId;
        partial void OnApplicationIdChanging(global::System.Int32 value);
        partial void OnApplicationIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Tab
        {
            get
            {
                return _Tab;
            }
            set
            {
                OnTabChanging(value);
                ReportPropertyChanging("Tab");
                _Tab = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Tab");
                OnTabChanged();
            }
        }
        private global::System.String _Tab;
        partial void OnTabChanging(global::System.String value);
        partial void OnTabChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String MenuOption
        {
            get
            {
                return _MenuOption;
            }
            set
            {
                OnMenuOptionChanging(value);
                ReportPropertyChanging("MenuOption");
                _MenuOption = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("MenuOption");
                OnMenuOptionChanged();
            }
        }
        private global::System.String _MenuOption;
        partial void OnMenuOptionChanging(global::System.String value);
        partial void OnMenuOptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsRestricted
        {
            get
            {
                return _IsRestricted;
            }
            set
            {
                OnIsRestrictedChanging(value);
                ReportPropertyChanging("IsRestricted");
                _IsRestricted = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsRestricted");
                OnIsRestrictedChanged();
            }
        }
        private global::System.Boolean _IsRestricted = false;
        partial void OnIsRestrictedChanging(global::System.Boolean value);
        partial void OnIsRestrictedChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LocalDataModel", "Applications_MenuOptions", "Application")]
        public eApplication vApplication
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<eApplication>("LocalDataModel.Applications_MenuOptions", "Application").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<eApplication>("LocalDataModel.Applications_MenuOptions", "Application").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<eApplication> vApplicationReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<eApplication>("LocalDataModel.Applications_MenuOptions", "Application");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<eApplication>("LocalDataModel.Applications_MenuOptions", "Application", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LocalDataModel", "UserMenuOptions", "User")]
        public EntityCollection<eUser> vUsers
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<eUser>("LocalDataModel.UserMenuOptions", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<eUser>("LocalDataModel.UserMenuOptions", "User", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LocalDataModel", Name="eUser")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class eUser : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new eUser object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="firstname">Initial value of the Firstname property.</param>
        /// <param name="lastname">Initial value of the Lastname property.</param>
        public static eUser CreateeUser(global::System.Int32 id, global::System.String firstname, global::System.String lastname)
        {
            eUser eUser = new eUser();
            eUser.Id = id;
            eUser.Firstname = firstname;
            eUser.Lastname = lastname;
            return eUser;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String NetworkId
        {
            get
            {
                return _NetworkId;
            }
            set
            {
                OnNetworkIdChanging(value);
                ReportPropertyChanging("NetworkId");
                _NetworkId = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("NetworkId");
                OnNetworkIdChanged();
            }
        }
        private global::System.String _NetworkId;
        partial void OnNetworkIdChanging(global::System.String value);
        partial void OnNetworkIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Firstname
        {
            get
            {
                return _Firstname;
            }
            set
            {
                OnFirstnameChanging(value);
                ReportPropertyChanging("Firstname");
                _Firstname = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Firstname");
                OnFirstnameChanged();
            }
        }
        private global::System.String _Firstname;
        partial void OnFirstnameChanging(global::System.String value);
        partial void OnFirstnameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Lastname
        {
            get
            {
                return _Lastname;
            }
            set
            {
                OnLastnameChanging(value);
                ReportPropertyChanging("Lastname");
                _Lastname = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Lastname");
                OnLastnameChanged();
            }
        }
        private global::System.String _Lastname;
        partial void OnLastnameChanging(global::System.String value);
        partial void OnLastnameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String eMail
        {
            get
            {
                return _eMail;
            }
            set
            {
                OneMailChanging(value);
                ReportPropertyChanging("eMail");
                _eMail = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("eMail");
                OneMailChanged();
            }
        }
        private global::System.String _eMail;
        partial void OneMailChanging(global::System.String value);
        partial void OneMailChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> Active
        {
            get
            {
                return _Active;
            }
            set
            {
                OnActiveChanging(value);
                ReportPropertyChanging("Active");
                _Active = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Active");
                OnActiveChanged();
            }
        }
        private Nullable<global::System.Boolean> _Active = true;
        partial void OnActiveChanging(Nullable<global::System.Boolean> value);
        partial void OnActiveChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Department
        {
            get
            {
                return _Department;
            }
            set
            {
                OnDepartmentChanging(value);
                ReportPropertyChanging("Department");
                _Department = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Department");
                OnDepartmentChanged();
            }
        }
        private global::System.String _Department;
        partial void OnDepartmentChanging(global::System.String value);
        partial void OnDepartmentChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Team
        {
            get
            {
                return _Team;
            }
            set
            {
                OnTeamChanging(value);
                ReportPropertyChanging("Team");
                _Team = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Team");
                OnTeamChanged();
            }
        }
        private global::System.String _Team;
        partial void OnTeamChanging(global::System.String value);
        partial void OnTeamChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LocalDataModel", "UserApplications", "Application")]
        public EntityCollection<eApplication> vApplications
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<eApplication>("LocalDataModel.UserApplications", "Application");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<eApplication>("LocalDataModel.UserApplications", "Application", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LocalDataModel", "UserEnvironments", "Environment")]
        public EntityCollection<eEnvironment> vEnvironments
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<eEnvironment>("LocalDataModel.UserEnvironments", "Environment");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<eEnvironment>("LocalDataModel.UserEnvironments", "Environment", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LocalDataModel", "UserMenuOptions", "MenuOption")]
        public EntityCollection<eMenuOption> vMenuOptions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<eMenuOption>("LocalDataModel.UserMenuOptions", "MenuOption");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<eMenuOption>("LocalDataModel.UserMenuOptions", "MenuOption", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LocalDataModel", Name="Setting")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Setting : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Setting object.
        /// </summary>
        /// <param name="version">Initial value of the Version property.</param>
        public static Setting CreateSetting(global::System.Double version)
        {
            Setting setting = new Setting();
            setting.Version = version;
            return setting;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double Version
        {
            get
            {
                return _Version;
            }
            set
            {
                if (_Version != value)
                {
                    OnVersionChanging(value);
                    ReportPropertyChanging("Version");
                    _Version = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Version");
                    OnVersionChanged();
                }
            }
        }
        private global::System.Double _Version;
        partial void OnVersionChanging(global::System.Double value);
        partial void OnVersionChanged();

        #endregion
    
    }

    #endregion
    
}
